"""change purchase enum

Revision ID: 35be60aac0f8
Revises: 9957ae62cd8d
Create Date: 2025-06-05 18:23:23.328781

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '35be60aac0f8'
down_revision: Union[str, None] = '9957ae62cd8d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Add new enum value
    op.execute("ALTER TYPE purchase_type_enum ADD VALUE IF NOT EXISTS 'BY_BUDGET'")

    # # Optional: update existing rows if needed
    # op.execute("""
    #     UPDATE transaction SET purchase_type = 'BY_BUDGET'
    #     WHERE purchase_type = 'BY_BUGDET'
    # """)

    # (Optional but recommended) Drop old enum and recreate if renaming/removing:
    # 1. Rename old type
    op.execute("ALTER TYPE purchase_type_enum RENAME TO purchase_type_enum_old")

    # 2. Create new enum type
    sa.Enum('BY_CREDIT', 'BY_BUDGET', name='purchase_type_enum').create(op.get_bind(), checkfirst=True)

    # 3. Alter column to use new enum
    op.execute("""
        ALTER TABLE transaction
        ALTER COLUMN purchase_type
        TYPE purchase_type_enum
        USING purchase_type::text::purchase_type_enum
    """)

    # 4. Drop old type
    op.execute("DROP TYPE purchase_type_enum_old")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
