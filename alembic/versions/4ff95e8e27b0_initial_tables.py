"""Initial tables

Revision ID: 4ff95e8e27b0
Revises: 
Create Date: 2025-06-04 18:50:32.017518

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4ff95e8e27b0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('total_credits', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('available_credits', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('price_per_credit', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_project_active_credits', 'project', ['is_active', 'available_credits'], unique=False)
    op.create_index('idx_project_created_at', 'project', ['created_at'], unique=False)
    op.create_index(op.f('ix_project_available_credits'), 'project', ['available_credits'], unique=False)
    op.create_index(op.f('ix_project_id'), 'project', ['id'], unique=False)
    op.create_index(op.f('ix_project_is_active'), 'project', ['is_active'], unique=False)
    op.create_table('wallet',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('balance', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_wallet_balance', 'wallet', ['balance'], unique=False)
    op.create_index('idx_wallet_user_active', 'wallet', ['user_id', 'is_active'], unique=False)
    op.create_index(op.f('ix_wallet_balance'), 'wallet', ['balance'], unique=False)
    op.create_index(op.f('ix_wallet_id'), 'wallet', ['id'], unique=False)
    op.create_index(op.f('ix_wallet_is_active'), 'wallet', ['is_active'], unique=False)
    op.create_index(op.f('ix_wallet_user_id'), 'wallet', ['user_id'], unique=True)
    op.create_table('transaction',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=True),
    sa.Column('transaction_type', sa.Enum('TOPUP', 'PURCHASE', 'REFUND', name='transaction_type_enum'), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('price_paid', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', 'CANCELLED', name='transaction_status_enum'), nullable=False),
    sa.Column('reference', sa.String(length=100), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_transaction_project', 'transaction', ['project_id'], unique=False)
    op.create_index('idx_transaction_status_created', 'transaction', ['status', 'created_at'], unique=False)
    op.create_index('idx_transaction_user_type', 'transaction', ['user_id', 'transaction_type'], unique=False)
    op.create_index(op.f('ix_transaction_id'), 'transaction', ['id'], unique=False)
    op.create_index(op.f('ix_transaction_is_active'), 'transaction', ['is_active'], unique=False)
    op.create_index(op.f('ix_transaction_project_id'), 'transaction', ['project_id'], unique=False)
    op.create_index(op.f('ix_transaction_status'), 'transaction', ['status'], unique=False)
    op.create_index(op.f('ix_transaction_transaction_type'), 'transaction', ['transaction_type'], unique=False)
    op.create_index(op.f('ix_transaction_user_id'), 'transaction', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transaction_user_id'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_transaction_type'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_status'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_project_id'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_is_active'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_id'), table_name='transaction')
    op.drop_index('idx_transaction_user_type', table_name='transaction')
    op.drop_index('idx_transaction_status_created', table_name='transaction')
    op.drop_index('idx_transaction_project', table_name='transaction')
    op.drop_table('transaction')
    op.drop_index(op.f('ix_wallet_user_id'), table_name='wallet')
    op.drop_index(op.f('ix_wallet_is_active'), table_name='wallet')
    op.drop_index(op.f('ix_wallet_id'), table_name='wallet')
    op.drop_index(op.f('ix_wallet_balance'), table_name='wallet')
    op.drop_index('idx_wallet_user_active', table_name='wallet')
    op.drop_index('idx_wallet_balance', table_name='wallet')
    op.drop_table('wallet')
    op.drop_index(op.f('ix_project_is_active'), table_name='project')
    op.drop_index(op.f('ix_project_id'), table_name='project')
    op.drop_index(op.f('ix_project_available_credits'), table_name='project')
    op.drop_index('idx_project_created_at', table_name='project')
    op.drop_index('idx_project_active_credits', table_name='project')
    op.drop_table('project')
    op.drop_table('user')
    # ### end Alembic commands ###
